{"version":3,"file":"static/js/528.41907fbe.chunk.js","mappings":"iKA4CA,IAzCoB,SAACA,GACjB,IAAMC,EAASC,SAASF,EAAMC,QACxBE,EAAKH,EAAMI,UACXC,EAAc,WAEhB,IADA,IAAIC,EAAO,GACHC,EAAE,EAAGA,EAAIN,EAAQM,IACrBD,EAAKE,MAAM,eAAuBC,UAAU,UAAxB,SAAWF,IAEnC,OAAOD,CACX,EAEA,OAEI,iBAAKG,UAAU,2BAA0B,WACrC,gBAAKA,UAAU,eAAc,UACzB,SAAC,KAAI,CAACC,GAAE,UAAKP,GAAK,UACd,SAAC,EAAAQ,cAAa,CACVC,IAAKZ,EAAMa,YACXC,OAAO,OACPC,MAAM,OACNN,UAAU,qBAItB,iBAAKA,UAAU,kCAAiC,WAC5C,eAAIA,UAAU,qCAAoC,UAAC,UAAC,KAAI,CAACC,GAAE,UAAKP,GAAMM,UAAU,+DAA8D,UAAET,EAAMgB,WAAW,UACjK,gBAAKP,UAAU,SAAQ,UACvB,yBACI,SAACJ,EAAW,SAGhB,mBACA,iBAAKI,UAAU,iBAAgB,WAC/B,gBAAKA,UAAU,kBAAiB,UAAC,eAAGQ,KAAK,IAAIR,UAAU,WAAU,WAAC,cAAGA,UAAU,iBAAmB,cAClG,gBAAKA,UAAU,mBAAkB,UAAC,eAAGQ,KAAK,IAAIR,UAAU,cAAa,WAAC,cAAGA,UAAU,iBAAmB,IAAET,EAAMkB,2BAK9H,C,2IC0CA,UA5EkB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,aAA8B,QAA9B,EAAIA,EAAMC,YAAYC,gBAAQ,aAA1B,EAA4BJ,MAAM,IACtE,GAAkCK,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KAE1BP,GACDF,EAASU,EAAAA,GAAAA,UAGZ,IAAMC,GAAeC,EAAAA,EAAAA,cAAY,WAC7BZ,EAASa,EAAAA,GAAAA,YAAyB,IAClC,IAAIC,EAAO,wEAAoEZ,EAAM,SAErF,IACIa,IAAAA,IAAUD,GACTE,MAAK,SAACC,GACe,MAAfA,EAAIC,QACHT,EAAaQ,EAAIE,MAErBnB,EAASa,EAAAA,GAAAA,YAAyB,GACtC,IACCO,OAAM,SAACC,GACJrB,EAASa,EAAAA,GAAAA,YAAyB,IAClCJ,EAAa,IACba,IAAAA,KAAU,CACNC,KAAM,QACNC,MAAO,QACPC,KAAM,wBAEd,IAAGC,SAAQ,WACP1B,EAASa,EAAAA,GAAAA,YAAyB,GACtC,GASJ,CARE,MAAOQ,GACLrB,EAASa,EAAAA,GAAAA,YAAyB,IAClCJ,EAAa,IACba,IAAAA,KAAU,CACNC,KAAM,QACNC,MAAO,QACPC,KAAM,wBAEd,CACJ,IASA,OAPAE,EAAAA,EAAAA,YAAU,WACN3B,EAASa,EAAAA,GAAAA,SAAuB,cAChCb,EAASa,EAAAA,GAAAA,mBAAiC,cAC1CF,GACJ,GAAG,KAIC,iBAAKrB,UAAU,YAAW,WACtB,SAAC,IAAM,WACf,2BAAO,gCAEC,iBAAKA,UAAU,kBAAiB,WAC9BkB,IAAa,uBAAG,sBAEVA,GAAaoB,OAAOC,QAAQrB,GAAWsB,KAAI,SAACC,EAAKC,GAC7C,OACI,gBAAkB1C,UAAU,4DAA2D,UACnF,SAAC,IAAW,CACRO,WAAYkC,EAAI,GAAgB,YAChC9C,UAAS,0BAAqB8C,EAAI,IAClCrC,YAAW,iBACXK,cAAegC,EAAI,GAAmB,kBALpCA,EAAI,GAStB,SAKpB,C","sources":["components/RecipeCard/RecipeCard2.js","pages/MyRecipes.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nconst RecipeCard2 = (props) => {\r\n    const rating = parseInt(props.rating);\r\n    const id = props.recipeUrl;\r\n    const RatingBlock = () => {\r\n        let star = [];\r\n        for(let i=0; i < rating; i++) {\r\n            star.push( <li key={'rating' + i} className=\"active\"></li>)\r\n        }\r\n        return star;\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"card border-0 box-shadow\">\r\n            <div className=\"card-img-top\">\r\n                <Link to={`${id}`}>\r\n                    <LazyLoadImage\r\n                        src={props.recipeImage}\r\n                        effect=\"blur\"\r\n                        width='100%'\r\n                        className=\"width-250px\"\r\n                    />\r\n                </Link>\r\n            </div>\r\n            <div className=\"padding-lr-30px padding-tb-20px\">\r\n                <h5 className=\"margin-bottom-20px margin-top-10px\"><Link to={`${id}`} className=\"d-block text-dark text-capitalize text-medium margin-tb-15px\">{props.recipeName} </Link></h5>\r\n                <div className=\"rating\">\r\n                <ul>\r\n                    <RatingBlock/>\r\n                </ul>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row no-gutters\">\r\n                <div className=\"col-4 text-left\"><a href=\"#\" className=\"text-red\"><i className=\"far fa-heart\"></i> Save</a></div>\r\n                <div className=\"col-8 text-right\"><a href=\"#\" className=\"text-grey-2\"><i className=\"fas fa-users\"></i> {props.recipeServing}</a></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeCard2;","import { useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { layoutActions, authActions } from \"../Store\";\r\nimport RecipeCard2 from \"../components/RecipeCard/RecipeCard2\";\r\n\r\nconst MyRecipes = () => {\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector(state => state.authReducer.userInfo?.userId);\r\n    const [myRecipes, setMyRecipes] = useState([]);\r\n\r\n    if(!userId) {\r\n       dispatch(authActions.logout());\r\n    }\r\n\r\n    const fetchRecipes = useCallback(() => {\r\n        dispatch(layoutActions.showLoader(true));\r\n        let apiCall = `https://react-movie-52e51-default-rtdb.firebaseio.com/recipes/${userId}.json`;\r\n\r\n        try {\r\n            axios.get(apiCall)\r\n            .then((res)=> { \r\n                if(res.status === 200) {\r\n                    setMyRecipes(res.data);\r\n                }\r\n                dispatch(layoutActions.showLoader(false));\r\n            })\r\n            .catch((error)=> {\r\n                dispatch(layoutActions.showLoader(false));\r\n                setMyRecipes([])\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'Something went wrong'\r\n                })\r\n            }).finally(() => {\r\n                dispatch(layoutActions.showLoader(false));\r\n            })\r\n        } catch (error) {\r\n            dispatch(layoutActions.showLoader(false));\r\n            setMyRecipes([])\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Something went wrong'\r\n            })\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(layoutActions.setTitle('My Recipe'));\r\n        dispatch(layoutActions.setHeaderAlignment('text-left'));\r\n        fetchRecipes()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Helmet>\r\n\t\t\t\t<title>Cook Note - Food Recipes</title>\r\n\t\t\t</Helmet>\r\n            <div className=\"recipes-masonry\">\r\n            {!myRecipes && <p>Recipes not found</p>}\r\n                {\r\n                    myRecipes && Object.entries(myRecipes).map((key, index) => {\r\n                        return (\r\n                            <div key={key[0]} className=\"col-xl-3 col-lg-4 col-md-6 recipe-item margin-bottom-40px\">\r\n                                <RecipeCard2 \r\n                                    recipeName={key[1]['recipeTitle']}\r\n                                    recipeUrl={`myRecipeDetails/${key[0]}`}\r\n                                    recipeImage={`/img/cat-2.jpg`}\r\n                                    recipeServing={key[1]['recipeServings']} \r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyRecipes;"],"names":["props","rating","parseInt","id","recipeUrl","RatingBlock","star","i","push","className","to","LazyLoadImage","src","recipeImage","effect","width","recipeName","href","recipeServing","dispatch","useDispatch","userId","useSelector","state","authReducer","userInfo","useState","myRecipes","setMyRecipes","authActions","fetchRecipes","useCallback","layoutActions","apiCall","axios","then","res","status","data","catch","error","Swal","icon","title","text","finally","useEffect","Object","entries","map","key","index"],"sourceRoot":""}