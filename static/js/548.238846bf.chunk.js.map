{"version":3,"file":"static/js/548.238846bf.chunk.js","mappings":"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","sources":["components/UI/InputControl.js","pages/Singin.js"],"sourcesContent":["import React, { useImperativeHandle} from \"react\";\r\n\r\nconst InputControl = React.forwardRef((props, ref) => {\r\n    // useImperativeHandle(ref, () => {\r\n    //     return {\r\n    //         focus: () => {\r\n    //             inputRef.current.focus();\r\n    //         },\r\n    //         value: () => {\r\n    //             return inputRef.current.value;\r\n    //         }\r\n    //     }\r\n    // });\r\n    return (\r\n        <input \r\n            ref={ref}\r\n            {...props}\r\n        />\r\n    )\r\n})\r\n\r\nexport default InputControl;","import { useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authActions, layoutActions } from \"../Store\";\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport InputControl from \"../components/UI/InputControl\";\r\nimport { setLogoutTimer } from \"../Store/authSlice\";\r\nconst Signin = () => {\r\n\tconst isAuthenticated = useSelector(state => state.authReducer.isAuthenticated);\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst emailRef = useRef();\r\n\tconst passwordRef = useRef();\r\n\tconst { register, handleSubmit, formState: { errors, isValid }} = useForm({\r\n\t\tmode: 'all',\r\n\t\tshouldUnregister: true,\r\n  \t\treValidateMode: 'onChange',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(layoutActions.setTitle('Sign In'));\r\n\t\tdispatch(layoutActions.setHeaderAlignment('text-center'));\r\n\t}, [])\r\n\r\n\t\r\n    useEffect(() => {\r\n\t\tif (isAuthenticated) {\r\n\t\t\thistory.push(\"/\");\r\n\t\t}\r\n    }, [isAuthenticated])\r\n\r\n\tasync function sendRequest(data) {\r\n\t\tlet errorMsg = 'couldn\\'t sign in';\r\n\t\ttry {\r\n\t\t\tdispatch(layoutActions.showLoader(true));\r\n            let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDRohny3ltD8ORRdQxLQfLCtyHgWRJjk9I';\r\n\t\t  \tconst response = await fetch(url,{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\temail: data.email,\r\n\t\t\t\t\tpassword: data.password,\r\n\t\t\t\t\treturnSecureToken: true\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\r\n\t\t\tconst responseData = await response.json();\r\n\t\t\tif(!response.ok) {\r\n\t\t\t  console.log(\"error:\", responseData.error)\r\n\t\t\t  throw new Error(responseData.error.message);\r\n\t\t\t}\r\n\t\r\n\t\t\tif(response.status === 200) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\ttitle: 'Success',\r\n\t\t\t\t\ttext: 'Successfully sign In',\r\n\t\t\t\t\ttimer: 2000\r\n\t\t\t\t})\r\n\t\t\t\tdispatch(authActions.login({\r\n\t\t\t\t\ttoken: responseData.idToken,\r\n\t\t\t\t\texpiresIn: responseData.expiresIn,\r\n\t\t\t\t\tuserInfo: {\r\n\t\t\t\t\t\temail: responseData.email,\r\n\t\t\t\t\t\tuserId: responseData.localId\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tconst expirationTime = new Date(\r\n\t\t\t\t\tnew Date().getTime() + +responseData.expiresIn * 1000\r\n\t\t\t\t);\r\n\t\t\t\tdispatch(setLogoutTimer(expirationTime.toISOString()))\r\n\t\t\t//   const expireTime = new Date(new Date().getTime() + (10 * 1000))\r\n\t\t\t//   authCtx.login(responseData.idToken, expireTime.toISOString() );\r\n\t\t\t//   authCtx.userData(responseData);\r\n\t\t\t//   history.replace(\"/\");\r\n\t\t\t  console.log(\"localId:\", responseData)\r\n\t\t\t}\r\n\t\t\tdispatch(layoutActions.showLoader(false));\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(layoutActions.showLoader(false));\r\n\t\t\tconsole.log(\"error in catch:\", error.message)\r\n\r\n\t\t\tif(error.message === 'INVALID_EMAIL') {\r\n\t\t\t\terrorMsg = \"Please entered valid email\"\r\n\t\t\t}\r\n\r\n\t\t\tif(error.message === 'EMAIL_NOT_FOUND') {\r\n\t\t\t\terrorMsg = \"Entered email is not found\"\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(error.message.includes('INVALID_PASSWORD')) {\r\n\t\t\t\terrorMsg = \"Entered password is invalid\"\r\n\t\t\t}\r\n\r\n            if(error.message.includes('TOO_MANY_ATTEMPTS_TRY_LATER')) { \r\n\t\t\t\terrorMsg = \"We have blocked all requests from this device due to unusual activity. Try again later.\"\r\n\t\t\t}\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\ttitle: 'Error',\r\n\t\t\t\ttext: errorMsg\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst loginHandler = (data) => {\r\n\t\tsendRequest({\r\n\t\t\temail: data.email,\r\n\t\t\tpassword: data.password\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container margin-bottom-100px\">\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Sign In | Cook Note - Food Recipes</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div id=\"log-in\" className=\"site-form log-in-form box-shadow border-radius-10\">\r\n\t\t\t\t<div className=\"form-output\">\r\n\t\t\t\t\t<form onSubmit={handleSubmit(loginHandler)}>\r\n\t\t\t\t\t\t<div className=\"form-group label-floating\">\r\n\t\t\t\t\t\t\t<label className=\"control-label\">Your Email</label>\r\n\t\t\t\t\t\t\t<InputControl className={`form-control ${errors.email && 'inValid'}`}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Email\" \r\n\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\tref={emailRef} \r\n\t\t\t\t\t\t\t\t{...register(\"email\", { \r\n\t\t\t\t\t\t\t\t\trequired: \"Email Address is required\",\r\n\t\t\t\t\t\t\t\t\tpattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\t\t\t\t\t\t\t\t})}/>\r\n\t\t\t\t\t\t\t{errors.email && errors.email.type === \"required\" && <p className=\"text-main-color\">Please enter email</p>}\r\n\t\t\t\t\t\t\t{errors.email && errors.email.type === \"pattern\" && <p className=\"text-main-color\">Please enter valid email</p> }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group label-floating\">\r\n\t\t\t\t\t\t\t<label className=\"control-label\">Your Password</label>\r\n\t\t\t\t\t\t\t<InputControl className={`form-control ${errors.password && 'inValid'}`}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Pasword\" \r\n\t\t\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\t\t\tref={passwordRef} \r\n\t\t\t\t\t\t\t\t{...register(\"password\", \r\n\t\t\t\t\t\t\t\t{ required: true, maxLength: 10, minLength: 6 })}/>\r\n\t\t\t\t\t\t\t\t{errors.password && errors.password.type === \"required\" && <p className=\"text-main-color\">Please enter password</p>}\r\n\t\t\t\t\t\t\t\t{errors.password && errors.password.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 6 characters</p> }\r\n\t\t\t\t\t\t\t\t{errors.password && errors.password.type === \"maxLength\" && <p className=\"text-main-color\">Please enter maximum 10 characters</p> }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Link to=\"/forgot-password\">Forgot password?</Link>\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-md btn-primary full-width\" disabled={!isValid}>Sign In</button>\r\n\t\t\t\t\t\t<p>Don't you have an account? <Link to=\"/singup\">Register Now!</Link> </p>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Signin;"],"names":["InputControl","React","props","ref","isAuthenticated","useSelector","state","authReducer","history","useHistory","dispatch","useDispatch","emailRef","useRef","passwordRef","useForm","mode","shouldUnregister","reValidateMode","register","handleSubmit","formState","errors","isValid","data","errorMsg","layoutActions","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","response","json","responseData","ok","console","log","error","Error","message","status","Swal","icon","title","text","timer","authActions","token","idToken","expiresIn","userInfo","userId","localId","expirationTime","Date","getTime","setLogoutTimer","toISOString","includes","useEffect","push","className","id","onSubmit","sendRequest","placeholder","type","required","pattern","maxLength","minLength","to","disabled"],"sourceRoot":""}