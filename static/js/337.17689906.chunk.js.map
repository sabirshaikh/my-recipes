{"version":3,"file":"static/js/337.17689906.chunk.js","mappings":"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","sources":["pages/AddRecipe.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Prompt } from \"react-router-dom\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { layoutActions } from \"../Store\";\r\nimport Swal from \"sweetalert2\";\r\nconst AddRecipe = () => {\r\n\tconst dispatch = useDispatch();\r\n    const userId = useSelector(state => state.authReducer.userInfo?.userId);\r\n    console.log(\"userId:\", userId)\r\n    useEffect(() => {\r\n        dispatch(layoutActions.setTitle('Add Recipe'));\r\n        dispatch(layoutActions.setHeaderAlignment('text-left'));\r\n    }, [])\r\n\r\n    \r\n    const { register, handleSubmit, formState: { errors, isValid, isDirty }, control, reset, setValue} = useForm({\r\n\t\tmode: 'all',\r\n\t\tshouldUnregister: false,\r\n  \t\treValidateMode: 'onChange',\r\n        defaultValues: {\r\n            ingredient: [{value: ''}],\r\n            step: [{value: ''}],\r\n            nutrient: [{value: ''}]\r\n        }\r\n\t});\r\n\r\n    const { fields: ingredientList, append: appendIngredients, remove: removeIngredients } = useFieldArray({\r\n        control,\r\n        name: \"ingredient\"\r\n    });\r\n    \r\n    const { fields: stepList, append: appendSteps, remove: removeSteps } = useFieldArray({\r\n        control,\r\n        name: \"step\"\r\n    });\r\n\r\n    const { fields: nutrientList, append: appendNutrients, remove: removeNutrients } = useFieldArray({\r\n        control,\r\n        name: \"nutrient\"\r\n    });\r\n\r\n    const ingredientChangeHandler = (e, index) => {\r\n        setValue(`ingredient[${index}].value`, e.currentTarget.value);\r\n    }\r\n\r\n    const addIngredient = () => {\r\n        appendIngredients({value: ''})\r\n    }\r\n\r\n    const removeIngredient = (index) => {\r\n        removeIngredients(index)\r\n    }\r\n\r\n    const stepChangeHandler = (e, index) => {\r\n        setValue(`step[${index}].value`, e.currentTarget.value);\r\n    }\r\n\r\n    const addStep = () => {\r\n        appendSteps({value: ''})\r\n    }\r\n\r\n    const removeStep = (index) => {\r\n        removeSteps(index)\r\n    }\r\n\r\n    const nutrientChangeHandler = (e, index) => {\r\n        setValue(`nutrient[${index}].value`, e.currentTarget.value);\r\n    }\r\n\r\n    const addNutrient = () => {\r\n        appendNutrients({value: ''})\r\n    }\r\n\r\n    const removeNutrient = (index) => {\r\n        removeNutrients(index)\r\n    }    \r\n   \r\n    const ingredients = ingredientList.map((data, index) => {\r\n        return (\r\n            <div key={'ingredient' + index} className=\"col-md-8 margin-bottom-20px\">\r\n                <label>Ingredient {index + 1} {data.ingredient}</label>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <input type=\"text\" \r\n                            defaultValue={data.value} \r\n                            onChange={(e) => ingredientChangeHandler(e, index)} \r\n                            className={`form-control form-control-sm ${errors.ingredient && errors.ingredient[index] && 'inValid'}`}\r\n                            key={data.id}\r\n                            control={control}\r\n                            {...register(`ingredient[${index}].value`, \r\n                            { required: true,  minLength: 2})}\r\n                            \r\n                        />\r\n                        {errors.ingredient && errors.ingredient[index] && errors.ingredient[index].value.type === \"required\" && <p className=\"text-main-color\">Please enter Ingredient</p>}\r\n                        {errors.ingredient && errors.ingredient[index] && errors.ingredient[index].value.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 2 characters</p> }\r\n                    </div>\r\n                    {index > 0 &&\r\n                    <div className=\"col-md-4\">\r\n                        <button type=\"button\"className=\"btn-sm background-main-color btn-primary ba-1\" onClick={() => removeIngredient(index)}>remove</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const steps = stepList.map((data, index) => {\r\n        return (\r\n            <div key={'step' + index} className=\"col-md-8 margin-bottom-20px\">\r\n                <label>Step {index + 1} {data.step}</label>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                    <input type=\"text\" \r\n                            defaultValue={data.value} \r\n                            onChange={(e) => stepChangeHandler(e, index)} \r\n                            className={`form-control form-control-sm ${errors.step && errors.step[index] && 'inValid'}`}\r\n                            key={data.id}\r\n                            control={control}\r\n                            {...register(`step[${index}].value`, \r\n                            { required: true,  minLength: 2})}\r\n                            \r\n                        />\r\n                        {errors.step && errors.step[index] && errors.step[index].value.type === \"required\" && <p className=\"text-main-color\">Please enter Step</p>}\r\n                        {errors.step && errors.step[index] && errors.step[index].value.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 2 characters</p> }\r\n                    </div>\r\n                    {index > 0 &&\r\n                    <div className=\"col-md-4\">\r\n                        <button type=\"button\"className=\"btn-sm background-main-color btn-primary ba-1\" onClick={() => removeStep(index)}>remove</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const nutrients = nutrientList.map((data, index) => {\r\n        return (\r\n            <div key={'nutrient' + index} className=\"col-md-8 margin-bottom-20px\">\r\n                <label>Nutrient {index + 1} {data.nutrient}</label>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                    <input type=\"text\" \r\n                            defaultValue={data.value} \r\n                            onChange={(e) => stepChangeHandler(e, index)} \r\n                            className={`form-control form-control-sm ${errors.nutrient && errors.nutrient[index] && 'inValid'}`}\r\n                            key={data.id}\r\n                            control={control}\r\n                            {...register(`nutrient[${index}].value`, \r\n                            { required: true,  minLength: 2})}\r\n                            \r\n                        />\r\n                        {errors.nutrient && errors.nutrient[index] && errors.nutrient[index].value.type === \"required\" && <p className=\"text-main-color\">Please enter nutrient</p>}\r\n                        {errors.nutrient && errors.nutrient[index] && errors.nutrient[index].value.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 2 characters</p> }\r\n                    </div>\r\n                    {index > 0 &&\r\n                    <div className=\"col-md-4\">\r\n                        <button type=\"button\"className=\"btn-sm background-main-color btn-primary ba-1\" onClick={() => removeNutrient(index)}>remove</button>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    \r\n    const addRecipeHandler = (data) => {\r\n        try {\r\n            dispatch(layoutActions.showLoader(true))\r\n            axios.post(`https://react-movie-52e51-default-rtdb.firebaseio.com/recipes/${userId}.json`, data)\r\n            .then(res => {\r\n                if(res.status !== 200) {\r\n                    throw new Error(res.error);\r\n                }\r\n                Swal.fire({\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\ttitle: 'Success',\r\n\t\t\t\t\ttext: 'Recipe Successfully submitted',\r\n\t\t\t\t\ttimer: 2000\r\n\t\t\t\t}).then(() => {\r\n                    reset();\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch(layoutActions.showLoader(false))\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: err.message\r\n                })\r\n                console.log(\"error:\", err)\r\n            }).finally(() => {\r\n                dispatch(layoutActions.showLoader(false))\r\n            })\r\n        } catch (err) {\r\n            dispatch(layoutActions.showLoader(false))\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: err.message\r\n            })\r\n            console.log(\"error:\", err)\r\n        }\r\n    }\r\n \r\n    return (\r\n        <div className=\"container\">\r\n            <Helmet>\r\n\t\t\t\t<title>Cook Note - Add recipe</title>\r\n\t\t\t</Helmet>\r\n            <form onSubmit={handleSubmit(addRecipeHandler)}>\r\n                {userId && <Prompt when={isDirty} message={`Changes you made may not be saved.`}/>}\r\n                <div className=\"margin-tb-45px full-width\">\r\n                    <h4 className=\"padding-lr-30px padding-tb-20px background-white box-shadow border-radius-10\"><i className=\"far fa-list-alt margin-right-10px text-main-color\"></i>Basic Informations</h4>\r\n                    <div className=\"padding-30px padding-bottom-30px background-white border-radius-10\">\r\n                        \r\n                            <div className=\"form-group margin-bottom-20px\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                    <label><i className=\"far fa-list-alt margin-right-10px\"></i> Recipe Title</label>\r\n                                        <input type=\"text\" className={`form-control form-control-sm ${errors.recipeTitle && 'inValid'}`} placeholder=\"Recipe Title\" \r\n                                            {...register(\"recipeTitle\", \r\n                                            { required: true,  minLength: 3})}\r\n                                        />\r\n                                        {errors.recipeTitle && errors.recipeTitle.type === \"required\" && <p className=\"text-main-color\">Please enter Recipe Title</p>}\r\n                                        {errors.recipeTitle && errors.recipeTitle.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 3 characters</p> }\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group margin-bottom-20px\">\r\n                                        <label><i className=\"far fa-images margin-right-10px\"></i> Image URL</label>\r\n                                            <input type=\"text\" className={`form-control form-control-sm ${errors.recipeImage && 'inValid'}`} placeholder=\"http://www./\" \r\n                                            {...register(\"recipeImage\", \r\n                                            { required: true,  minLength: 3})}\r\n                                        />\r\n                                        {errors.recipeImage && errors.recipeImage.type === \"required\" && <p className=\"text-main-color\">Please enter Recipe image url</p>}\r\n                                        {errors.recipeImage && errors.recipeImage.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 3 characters</p> }\r\n                                        </div>\r\n                                    </div>      \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group margin-bottom-20px\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <label><i className=\"far fa-folder-open margin-right-10px\"></i> Category</label>\r\n                                        <select className=\"form-control form-control-sm\" {...register(\"recipeCategory\")}>\r\n                                            <option>Fish</option>\r\n                                            <option>Cocktails</option>\r\n                                            <option>Eggs</option>\r\n                                            <option>Salads</option>\r\n                                            <option>Asian</option>\r\n                                            <option>Pizza</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group margin-bottom-20px\">\r\n                                            <label>Cuisine Type</label>\r\n                                            <input type=\"text\" className={`form-control form-control-sm ${errors.recipeCuisine && 'inValid'}`}\r\n                                                {...register(\"recipeCuisine\", \r\n\t\t\t\t\t\t\t                    { required: true,  minLength: 3})}\r\n                                            />\r\n                                            {errors.recipeCuisine && errors.recipeCuisine.type === \"required\" && <p className=\"text-main-color\">Please enter Cuisine Type</p>}\r\n\t\t\t\t\t\t\t                {errors.recipeCuisine && errors.recipeCuisine.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 3 characters</p> }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group margin-bottom-20px\">\r\n                                            <label>Meal Type</label>\r\n                                            <input type=\"text\" className={`form-control form-control-sm ${errors.recipeMeal && 'inValid'}`}\r\n                                                {...register(\"recipeMeal\", \r\n\t\t\t\t\t\t\t                    { required: true,  minLength: 3})}\r\n                                            />\r\n                                            {errors.recipeMeal && errors.recipeMeal.type === \"required\" && <p className=\"text-main-color\">Please enter Meal Type</p>}\r\n\t\t\t\t\t\t\t                {errors.recipeMeal && errors.recipeMeal.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 3 characters</p> }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group margin-bottom-20px\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group margin-bottom-20px\">\r\n                                            <label>Diet Type</label>\r\n                                            <input type=\"text\" className={`form-control form-control-sm ${errors.recipeDiet && 'inValid'}`}\r\n                                                {...register(\"recipeDiet\", \r\n\t\t\t\t\t\t\t                    { required: true,  minLength: 3})}\r\n                                            />\r\n                                            {errors.recipeDiet && errors.recipeDiet.type === \"required\" && <p className=\"text-main-color\">Please enter Diet Type</p>}\r\n\t\t\t\t\t\t\t                {errors.recipeDiet && errors.recipeDiet.type === \"minLength\" && <p className=\"text-main-color\">Please enter minimum 3 characters</p> }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group margin-bottom-20px\">\r\n                                            <label>Total Weight (g)</label>\r\n                                            <input type=\"text\" className={`form-control form-control-sm ${errors.recipeWeight && 'inValid'}`}\r\n                                                {...register(\"recipeWeight\", \r\n\t\t\t\t\t\t\t                    { required: true, pattern: /^\\d*$/})}\r\n                                            />\r\n                                            {errors.recipeWeight && errors.recipeWeight.type === \"required\" && <p className=\"text-main-color\">Please enter Weight</p>}\r\n                                            {errors.recipeWeight && errors.recipeWeight.type === \"pattern\" && <p className=\"text-main-color\">Please enter valid Weight</p> }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group margin-bottom-20px\">\r\n                                            <label>Total Calories (Kcal)</label>\r\n                                            <input type=\"text\" className={`form-control form-control-sm ${errors.recipeCalories && 'inValid'}`}\r\n                                                {...register(\"recipeCalories\", \r\n\t\t\t\t\t\t\t                    { required: true, pattern: /^\\d*$/})}\r\n                                            />\r\n                                            {errors.recipeCalories && errors.recipeCalories.type === \"required\" && <p className=\"text-main-color\">Please enter Calories</p>}\r\n                                            {errors.recipeCalories && errors.recipeCalories.type === \"pattern\" && <p className=\"text-main-color\">Please enter valid Calories</p> }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group margin-bottom-20px\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group margin-bottom-20px\">\r\n                                            <label><i className=\"fas fa-users\"></i> Servings</label>\r\n                                            <input type=\"text\" className={`form-control form-control-sm ${errors.recipeServings && 'inValid'}`}\r\n                                                {...register(\"recipeServings\", \r\n\t\t\t\t\t\t\t                    { required: true, pattern: /^\\d*$/})}\r\n                                            />\r\n                                            {errors.recipeServings && errors.recipeServings.type === \"required\" && <p className=\"text-main-color\">Please enter Servings</p>}\r\n                                            {errors.recipeServings && errors.recipeServings.type === \"pattern\" && <p className=\"text-main-color\">Please enter only digits</p> }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"margin-bottom-45px full-width\">\r\n                    <h4 className=\"padding-lr-30px padding-tb-20px background-white box-shadow border-radius-10\"><i className=\"far fa-list-alt margin-right-10px text-main-color\"></i>Ingredients</h4>\r\n                    <div className=\"padding-30px padding-bottom-30px background-white border-radius-10\">\r\n                        <div className=\"row\">\r\n                            {ingredients}\r\n                            <div className=\"col-12\">\r\n                                <button type=\"button\"className=\"btn btn-md btn-primary ba-1\" onClick={addIngredient}>+ Add more</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"margin-bottom-45px full-width\">\r\n                    <h4 className=\"padding-lr-30px padding-tb-20px background-white box-shadow border-radius-10\"><i className=\"far fa-list-alt margin-right-10px text-main-color\"></i>Method</h4>\r\n                    <div className=\"padding-30px padding-bottom-30px background-white border-radius-10\">\r\n                        <div className=\"row\">\r\n                            {steps}\r\n                            <div className=\"col-12\">\r\n                                <button type=\"button\"className=\"btn btn-md btn-primary ba-1\" onClick={addStep}>+ Add more</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"margin-bottom-45px full-width\">\r\n                    <h4 className=\"padding-lr-30px padding-tb-20px background-white box-shadow border-radius-10\"><i className=\"far fa-list-alt margin-right-10px text-main-color\"></i>Total Nutrients</h4>\r\n                    <div className=\"padding-30px padding-bottom-30px background-white border-radius-10\">\r\n                        <div className=\"row\">\r\n                            {nutrients}\r\n                            <div className=\"col-12\">\r\n                                <button type=\"button\" className=\"btn btn-md btn-primary ba-1\" onClick={addNutrient}>+ Add more</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" href=\"#\" className=\"btn btn-lg border-2  ba-1 text-white margin-bottom-80px btn-block border-radius-15 padding-15px box-shadow\" disabled={!isValid}>Add Recipe</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRecipe;"],"names":["dispatch","useDispatch","userId","useSelector","state","authReducer","userInfo","console","log","useEffect","layoutActions","useForm","mode","shouldUnregister","reValidateMode","defaultValues","ingredient","value","step","nutrient","register","handleSubmit","formState","errors","isValid","isDirty","control","reset","setValue","useFieldArray","name","ingredientList","fields","appendIngredients","append","removeIngredients","remove","stepList","appendSteps","removeSteps","nutrientList","appendNutrients","removeNutrients","stepChangeHandler","e","index","currentTarget","ingredients","map","data","className","type","defaultValue","onChange","ingredientChangeHandler","required","minLength","id","onClick","removeIngredient","steps","removeStep","nutrients","removeNutrient","onSubmit","axios","then","res","status","Error","error","Swal","icon","title","text","timer","catch","err","message","finally","when","recipeTitle","placeholder","recipeImage","recipeCuisine","recipeMeal","recipeDiet","recipeWeight","pattern","recipeCalories","recipeServings","href","disabled"],"sourceRoot":""}